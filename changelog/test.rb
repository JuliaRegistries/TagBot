paths = Dir.glob("vendor/**/lib")
$LOAD_PATH.unshift(*paths)
ENV['AWS_REGION'] = 'us-east-1'
require_relative 'changelog.rb'
require 'test/unit'

$input_simple = %{
## [v0.1.2](https://github.com/foo/bar/tree/v0.1.2) (1234-56-78)

- foo
- bar
- baz

## [v0.1.1](https://github.com/foo/bar/tree/v0.1.1) (1234-56-78)

[Full Changelog](https://github.com/foo/bar/compare/v0.1.0...v0.1.1)

- Did the thing [\\#1](https://github.com/foo/bar/issues/1)
- Did the other thing [\\#2](https://github.com/foo/bar/pulls/2) ([foo](https://github.com/foo))

## [v0.1.0](https://github.com/foo/bar/tree/v0.1.0) (1234-56-78)

- foo
- bar
- baz

\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*
}

$input_tricky = %{
## [v0.1.10](https://github.com/foo/bar/tree/v0.1.10) (1234-56-78)

- foo
- bar
- baz

## [v0.1.1](https://github.com/foo/bar/tree/v0.1.1) (1234-56-78)

[Full Changelog](https://github.com/foo/bar/compare/v0.1.0...v0.1.1)

- Did the thing [\\#1](https://github.com/foo/bar/issues/1)
- Did the other thing [\\#2](https://github.com/foo/bar/pulls/2) ([foo](https://github.com/foo))

\\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*
}

$output = %{
## [v0.1.1](https://github.com/foo/bar/tree/v0.1.1) (1234-56-78)

[Diff since v0.1.0](https://github.com/foo/bar/compare/v0.1.0...v0.1.1)

- Did the thing (#1)
- Did the other thing (#2) ([foo](https://github.com/foo))
}.strip

class TestChangelog < Test::Unit::TestCase
  def test_find_section
    output_simple = find_section($input_simple, 'v0.1.1')
    output_tricky = find_section($input_tricky, 'v0.1.1')
    assert_equal($output, output_simple)
    assert_equal($output, output_tricky)
  end

  def test_permutations
    perms = "foo".permutations
    expected = ["foo", "Foo"]
    assert_equal(perms.length, 2)
    assert_equal(perms.sort, expected.sort)

    perms = "foo bar".permutations
    expected = ["foo bar", "foobar", "foo-bar", "foo_bar", "Foo Bar", "FooBar", "Foo-Bar", "Foo_Bar"]
    assert_equal(perms.length, 8)
    assert_equal(perms.sort, expected.sort)
  end
end
